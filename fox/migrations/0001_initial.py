# Generated by Django 4.2.6 on 2023-10-30 03:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("birthday", models.DateField(blank=True, null=True)),
                ("ssn", models.PositiveBigIntegerField(blank=True, null=True)),
                (
                    "asaas_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("phone1", models.CharField(blank=True, max_length=255, null=True)),
                ("phone2", models.CharField(blank=True, max_length=255, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                ("is_tech", models.BooleanField(default=False)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("date_blocked", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cep", models.CharField(max_length=255, null=True)),
                ("street", models.CharField(max_length=255, null=True)),
                ("city", models.CharField(max_length=255, null=True)),
                ("state", models.CharField(max_length=2, null=True)),
                ("number", models.CharField(max_length=255, null=True)),
                ("complement", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("imei", models.CharField(max_length=20, unique=True)),
                ("brand", models.CharField(max_length=50, null=True)),
                ("model", models.CharField(max_length=50, null=True)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("seller", models.CharField(max_length=128, null=True)),
                ("comment", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Simcard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("iccid", models.CharField(max_length=20, unique=True)),
                ("msisdn", models.CharField(max_length=13, unique=True)),
                ("apn", models.CharField(max_length=32, null=True)),
                ("login", models.CharField(max_length=18, null=True)),
                ("password", models.CharField(max_length=18, null=True)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, max_digits=6, null=True),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("comment", models.TextField(null=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="simcard",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plate", models.CharField(max_length=8, unique=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                ("brand", models.CharField(blank=True, max_length=20, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                ("color", models.CharField(blank=True, max_length=20, null=True)),
                ("engine", models.CharField(blank=True, max_length=8, null=True)),
                ("power", models.CharField(blank=True, max_length=7, null=True)),
                ("fuel", models.CharField(blank=True, max_length=20, null=True)),
                ("uf", models.CharField(blank=True, max_length=2, null=True)),
                ("city", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "fipe",
                    models.DecimalField(decimal_places=2, default=0, max_digits=9),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_owned",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserVehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fox.vehicle"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tasks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comments", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Instalação", "Install"),
                            ("Retirada", "Remove"),
                            ("Troca", "Replace"),
                            ("Manutenção", "Maintenance"),
                            ("Outros", "Default"),
                        ],
                        default="Outros",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("Alta", "High"),
                            ("Normal", "Medium"),
                            ("Baixa", "Low"),
                            ("Urgente", "Urgent"),
                            ("Nenhuma", "Default"),
                        ],
                        default="Nenhuma",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("remote_block", models.BooleanField(default=False)),
                ("status", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_task",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task",
                        to="fox.device",
                    ),
                ),
                (
                    "simcard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task",
                        to="fox.simcard",
                    ),
                ),
                (
                    "tech",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_task",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task",
                        to="fox.vehicle",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="device",
            name="simcard",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="device",
                to="fox.simcard",
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="user_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="device",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="address",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_id",
                to="fox.address",
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="vehicle",
            field=models.ManyToManyField(
                related_name="user_vehicle", through="fox.UserVehicle", to="fox.vehicle"
            ),
        ),
    ]
